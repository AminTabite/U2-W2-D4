// lo scopo di questo file è permetterci di applicare una "copertina" di
// personalizzazioni sui sorgenti dell'ultima versione di bootstrap
// lavoriamo qui e non direttamente nei partials che abbiamo scaricato in quanto
// questo file di personalizzazione potrà poi venire riutilizzato ed applicato
// su una qualsiasi versione anche futura del framework

// quindi l'idea è che questo file generi, una volta compilato, un
// "custom-bootstrap.css" con all'interno tutte le mie modifiche

// partiamo! andiamo a modificare i COLORI base del framework
// questi colori base sono definiti nel partial chiamato "_variables.scss"
@import './scss/functions'; /* questo serve per _variables */
@import './scss/variables';
// ora sono definiti i vari primary, secondary, success etc.

$new-primary: rgb(174, 31, 174);
$new-secondary: rgb(201, 201, 201);
$new-danger: rgb(244, 127, 43);
$stefano: rgb(12, 143, 143);
$danger: #ff0077;
$info: #00ffea;
$light: #f3eeff;

$new-theme-colors: (
  'primary': $new-primary,
  'secondary': $new-secondary,
  'danger': $danger,
  'stefano': $stefano,
  'info': $info,
  'light': $light,

);

// ...ho creato i miei due colori nuovi, gli ho dato i nomi di "primary"
// e "secondary" nella mia versione della mappa colori...
// ...e ora vado a FONDERE la mia mappa colori con quella di default di bootstrap!

// riassegno il valore alla $theme-colors originale di bootstrap
$theme-colors: map-merge($theme-colors, $new-theme-colors);
// ora questa mappa ha tutti i colori di default di bootstrap ma primary
// e secondary sono diventati il mio viola e il mio grigio!

// cambiamo gli "spacers"
$new-spacers: (
  6: $spacer * 4,
  //   aggiungo un nuovo spacer con il valore 6
);

$spacers: map-merge($spacers, $new-spacers);


//1 esercizio

$font-sizes: (
  1: 2.5rem,
  2: 2rem,
  3: 1.75rem,
  4: 1.5rem,
  5: 1.25rem,
  6: 1rem
);

$h7-font-size: 0.75rem;
$h8-font-size: 0.675rem;
$h9-font-size: 0.6rem;
$h10-font-size: 0.5rem;

$new-font-sizes: (
  7: $h7-font-size,
  8: $h8-font-size,
  9: $h9-font-size,
  10: $h10-font-size
);

$font-sizes: map-merge($font-sizes, $new-font-sizes);



// 2 esercizio
$new-border-widths: (
  6: 6px,
  7: 7px,
  8: 8px,
  9: 9px,
  10: 10px,
);

$border-widths: map-merge($border-widths, $new-border-widths);

// 5 esercizio 

/*$new-input-btn-padding: (
$new-input-btn-padding-y: 2.5rem,
$new-input-btn-padding-x: 0.75rem,
);


$input-btn-padding: map-merge($btn-padding-x, $btn-padding-y, $new-input-btn-padding-x, $new-input-btn-padding-y );
*/

// 6 esercizio

$grid-gutter-width: 0.5rem;


// 8 esercizio 





// 9 esercizio 





//10 esercizio 








@import './scss/bootstrap.scss';
// ...ma scusa: se ti sei andato a reimportare nuovamente TUTTO bootstrap
// alla fine delle tue personalizzazioni, non sei andato a sovrascrivere nuovamente
// $theme-colors? come fanno i tuoi colori ad essere arrivati nel file compilato?

// questo avviene perchè TUTTE le variabili definite nei partials di bootstrap
// sono state dichiarate con un flag !default alla fine. !default significa:
// "creo questa variabile a meno che non sia già stata creata prima"

// si va a importare tutto quello che manca senza andare a sovrascrivere
// quello che ho personalizzato io!
